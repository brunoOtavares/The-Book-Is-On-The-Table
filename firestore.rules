rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Coleção de usernames para garantir unicidade
    match /usernames/{username} {
      // Qualquer um pode ler (para verificação)
      allow read: if true;
      
      // Só pode criar se não existir
      allow create: if !exists(/databases/$(database)/documents/usernames/$(username));
      
      // Ninguém pode atualizar ou deletar usernames
      allow update, delete: if false;
    }
    
    // Regras para usuários autenticados
    match /users/{userId} {
      // Usuários autenticados podem ler dados básicos de outros usuários para busca
      allow read: if request.auth != null &&
                    (request.auth.uid == userId ||
                     resource.data.keys().hasAll(['username', 'email', 'createdAt']));
      
      // Para criar um novo usuário
      allow create: if request.auth != null &&
                     request.auth.uid == userId &&
                     !exists(/databases/$(database)/documents/users/$(userId));
      
      // Usuários podem atualizar seus próprios dados (mas não o username)
      allow update: if request.auth != null &&
                     request.auth.uid == userId &&
                     request.resource.data.username == resource.data.username; // Username não pode ser alterado
      
      // Regras para a coleção de livros do usuário
      match /books/{bookId} {
        // Usuários podem ler livros de outros usuários (para perfil público)
        allow read: if request.auth != null;
        
        // Usuários podem escrever, atualizar e deletar seus próprios livros
        allow write, update, delete: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Regras para perfis públicos de usuários
    match /publicUsers/{userId} {
      // Qualquer usuário autenticado pode ler perfis públicos
      allow read: if request.auth != null;
      
      // Usuários podem criar seu próprio perfil público
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // Usuários podem atualizar seu próprio perfil público
      allow update: if request.auth != null && request.auth.uid == userId;
      
      // Ninguém pode deletar perfis públicos
      allow delete: if false;
    }
    
    // Regras para dados públicos (se necessário no futuro)
    match /public/{documentId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
  }
}